<?php
/*
 * This file has been automatically generated by TDBM.
 * You can edit this file as it will not be overwritten.
 */

declare(strict_types=1);

namespace App\Domain\Model;

use App\Domain\Exception\InvalidArrayValue;
use App\Domain\Exception\InvalidStringValue;
use App\Domain\Model\Generated\AbstractRole;
use TheCodingMachine\GraphQLite\Annotations\Field;
use TheCodingMachine\GraphQLite\Annotations\Type;
use function count;

/**
 * The Role class maps the 'roles' table in database.
 *
 * @Type
 */
class Role extends AbstractRole
{
    /**
     * @throws InvalidStringValue
     */
    public function setName(string $name): void
    {
        $property = 'name';
        InvalidStringValue::notBlank($name, $property);
        InvalidStringValue::length($name, 1, 255, $property);
        parent::setName($name);
    }

    /**
     * @throws InvalidStringValue
     */
    public function setDescription(?string $description): void
    {
        $property = 'description';
        InvalidStringValue::notBlank($description, $property);
        parent::setDescription($description);
    }

    /**
     * @param mixed[] $rights
     *
     * @throws InvalidArrayValue
     */
    public function setRights(array $rights): void
    {
        $property = 'rights';
        InvalidArrayValue::valuesOfClass($rights, Right::class, $property);
        parent::setRights($rights);
    }

    /**
     * @Field
     */
    public function getUsersCount(): int
    {
        // There
        return count($this->getUsers());
    }
}
